<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.TbDepartment" class="com.vma.code.domain.TbDepartment">
        <result property="dtId" column="dt_id"/>
        <result property="dtName" column="dt_name"/>
        <result property="dtCreateTime" column="dt_createTime"/>
        <result property="dtBz" column="dt_bz"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="TbDepartment.columns">
	    <![CDATA[
        tb_department.dt_id ,tb_department.dt_name ,tb_department.dt_createTime ,tb_department.dt_bz 
	    ]]>
	</sql>
	
    <insert id="TbDepartment.insert" >
	   INSERT INTO tb_department (
        	dt_id  
        	 <isNotEmpty  property="dtName" prepend=",">dt_name </isNotEmpty>
        	 <isNotEmpty  property="dtCreateTime" prepend=",">dt_createTime </isNotEmpty>
        	 <isNotEmpty  property="dtBz" prepend=",">dt_bz </isNotEmpty>
        ) VALUES (
        	<![CDATA[ #dtId# ]]> 
        	 <isNotEmpty  property="dtName"  prepend=","> <![CDATA[#dtName#]]></isNotEmpty>
        	 <isNotEmpty  property="dtCreateTime"  prepend=","> <![CDATA[#dtCreateTime#]]></isNotEmpty>
        	 <isNotEmpty  property="dtBz"  prepend=","> <![CDATA[#dtBz#]]></isNotEmpty>
        )
        
       	<!--
       	databaseType
	    mysql:		type="post" SELECT  select last_insert_id()
	    sqlserver:	type="post" SELECT  @@identity  AS  ID
	    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
	    DB2:		type="pre"	values nextval for sequenceName
	    -->
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="dtId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="TbDepartment.update" >
        UPDATE tb_department SET
	        dt_id = #dtId# 
	       <isNotEmpty  property="dtName" prepend="," ><![CDATA[ dt_name = #dtName# ]]> </isNotEmpty>
	       <isNotEmpty  property="dtCreateTime" prepend="," ><![CDATA[ dt_createTime = #dtCreateTime# ]]> </isNotEmpty>
	       <isNotEmpty  property="dtBz" prepend="," ><![CDATA[ dt_bz = #dtBz# ]]> </isNotEmpty>
        WHERE 
	        dt_id = #dtId# 
    </update>

    <delete id="TbDepartment.delete">
    <![CDATA[
        DELETE FROM tb_department WHERE
        dt_id = #dtId# 
    ]]>
    </delete>
    
    <delete id="TbDepartment.deleteByIds">
     
    	delete from tb_department where 
    	dt_id 
    	 in
    	<iterate conjunction="," open="(" close=")" property="items">
        	#items[]#
      </iterate>
      
    </delete>
    
    <select id="TbDepartment.getById" resultMap="RM.TbDepartment">
	    SELECT <include refid="TbDepartment.columns"/>
	    <![CDATA[
	        FROM tb_department 
	        WHERE 
		        dt_id = #dtId# 
	    ]]>
    </select>
	
	<sql id="TbDepartment.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="dtId">
		            <![CDATA[ tb_department.dt_id = #dtId# ]]>
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dtName">
		            <![CDATA[ tb_department.dt_name LIKE concat('%',#dtName#,'%') ]]>
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dtCreateTime">
		            <![CDATA[ tb_department.dt_createTime LIKE concat('%',#dtCreateTime#,'%') ]]>
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dtBz">
		            <![CDATA[ tb_department.dt_bz LIKE concat('%',#dtBz#,'%') ]]>
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	
    <select id="TbDepartment.findPage.count" resultClass="long">
        SELECT count(*) FROM tb_department <include refid="TbDepartment.findPage.where"/> 
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TbDepartment.findPage" resultMap="RM.TbDepartment">
    	SELECT <include refid="TbDepartment.columns"/> FROM tb_department 
		<include refid="TbDepartment.findPage.where"/>		
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <select id="TbDepartment.findAll" resultMap="RM.TbDepartment">
    	SELECT <include refid="TbDepartment.columns"/> FROM tb_department
			<isNotEmpty property="sortColumns"> 
				<![CDATA[ ORDER BY $sortColumns$ ]]>
			</isNotEmpty>
    </select>

	
	<select id="TbDepartment.findByCondition" resultMap="RM.TbDepartment">
    	SELECT <include refid="TbDepartment.columns"/> FROM tb_department 
		<include refid="TbDepartment.findPage.where"/>		
		<isNotEmpty property="sortColumns">
					ORDER BY $sortColumns$
		</isNotEmpty>
    </select>
    
    <sql id="TbDepartment.isUnique.where">
	    <dynamic prepend="WHERE">
        		<isNotEmpty prepend="AND" property="dtId">
		            <![CDATA[ tb_department.dt_id <> #dtId# ]]>
		        </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dtName">
		            <![CDATA[ tb_department.dt_name = #dtName# ]]>
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dtCreateTime">
		            <![CDATA[ tb_department.dt_createTime = #dtCreateTime# ]]>
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dtBz">
		            <![CDATA[ tb_department.dt_bz = #dtBz# ]]>
		       </isNotEmpty>
	    </dynamic>	
	</sql>
    <select id="TbDepartment.isUnique" resultClass="long">
        SELECT count(*) FROM tb_department  <include refid="TbDepartment.isUnique.where"/>
    </select>
	
</sqlMap>

